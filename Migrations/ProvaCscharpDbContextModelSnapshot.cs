// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProvaCsharp.Models;

#nullable disable

namespace ProvaCsharp.Migrations
{
    [DbContext(typeof(ProvaCscharpDbContext))]
    partial class ProvaCscharpDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProvaCsharp.Models.Point", b =>
                {
                    b.Property<int>("PointID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToursPointID")
                        .HasColumnType("int");

                    b.HasKey("PointID");

                    b.HasIndex("ToursPointID");

                    b.ToTable("Points");
                });

            modelBuilder.Entity("ProvaCsharp.Models.Tour", b =>
                {
                    b.Property<int>("TourID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TourID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PointID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("TourID");

                    b.HasIndex("PointID");

                    b.HasIndex("UserID");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("ProvaCsharp.Models.ToursPoint", b =>
                {
                    b.Property<int>("ToursPointID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToursPointID"));

                    b.Property<int>("PointID")
                        .HasColumnType("int");

                    b.Property<int>("TourID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ToursPointID");

                    b.HasIndex("PointID");

                    b.HasIndex("TourID");

                    b.HasIndex("UserID");

                    b.ToTable("ToursPoint");
                });

            modelBuilder.Entity("ProvaCsharp.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TourID")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserID");

                    b.HasIndex("TourID");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProvaCsharp.Models.Point", b =>
                {
                    b.HasOne("ProvaCsharp.Models.Tour", "Tour")
                        .WithMany("Points")
                        .HasForeignKey("PointID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProvaCsharp.Models.ToursPoint", null)
                        .WithMany("Points")
                        .HasForeignKey("ToursPointID");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("ProvaCsharp.Models.Tour", b =>
                {
                    b.HasOne("ProvaCsharp.Models.Point", "Point")
                        .WithMany()
                        .HasForeignKey("PointID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProvaCsharp.Models.User", "User")
                        .WithMany("Tours")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Point");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProvaCsharp.Models.ToursPoint", b =>
                {
                    b.HasOne("ProvaCsharp.Models.Point", "Point")
                        .WithMany("ToursPoints")
                        .HasForeignKey("PointID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProvaCsharp.Models.Tour", "Tour")
                        .WithMany("ToursPoints")
                        .HasForeignKey("TourID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProvaCsharp.Models.User", "User")
                        .WithMany("ToursPoints")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Point");

                    b.Navigation("Tour");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProvaCsharp.Models.User", b =>
                {
                    b.HasOne("ProvaCsharp.Models.Tour", "Tour")
                        .WithMany("Users")
                        .HasForeignKey("TourID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("ProvaCsharp.Models.Point", b =>
                {
                    b.Navigation("ToursPoints");
                });

            modelBuilder.Entity("ProvaCsharp.Models.Tour", b =>
                {
                    b.Navigation("Points");

                    b.Navigation("ToursPoints");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ProvaCsharp.Models.ToursPoint", b =>
                {
                    b.Navigation("Points");
                });

            modelBuilder.Entity("ProvaCsharp.Models.User", b =>
                {
                    b.Navigation("Tours");

                    b.Navigation("ToursPoints");
                });
#pragma warning restore 612, 618
        }
    }
}
